# -*- coding: utf-8 -*-
"""reidge and lasso.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KPK8xBFTq-KyL80sebGgc_te3Fm_DmVC
"""

import numpy as np

import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv('housing.csv')

data['total_bedrooms'] = data['total_bedrooms'].fillna(np.mean(data['total_bedrooms']))

data

data.drop('ocean_proximity' , axis=1 , inplace=True)

data.isnull().sum()

X = data.iloc[: , data.columns!='median_house_value']
Y = data['median_house_value']

Y

from sklearn.model_selection import train_test_split
X_train , X_test  , y_train , y_test = train_test_split(X , Y , test_size=0.3 , random_state=0)

from sklearn.model_selection import GridSearchCV

from sklearn.linear_model import  Ridge
ridge_regressor = Ridge()

parameters =  {'alpha' :[1,2,5,10,20,30,40,50,60,70,80]}

ridge_val = GridSearchCV(ridge_regressor, parameters , scoring='neg_mean_squared_error' , cv=5 )

ridge_val.fit(X_train , y_train)

ridge_val.best_estimator_

y_pred_ridge = ridge_val.predict(X_test)

from sklearn.metrics import r2_score
print(r2_score(y_test ,y_pred_ridge))

import seaborn as sns
sns.displot(y_pred_ridge-y_test , kind='kde')

from sklearn.linear_model import Lasso
lasso_regressor = Lasso()

parameters =  {'alpha' :[1,2,5,10,20,30,40,50,60,70,80]}

lasso_val = GridSearchCV(lasso_regressor, parameters , scoring='neg_mean_squared_error' , cv=5 )

lasso_val.fit(X_train , y_train)

y_pred_lesso = lasso_val.predict(X_test)

from sklearn.metrics import r2_score
print(r2_score(y_test ,y_pred_lesso))

import seaborn as sns
sns.displot(y_pred_lesso-y_test , kind='kde')

