# -*- coding: utf-8 -*-
"""day2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ejY7ySDmb1lFgyF1xdkI5KfCnZwZW3h8
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler , PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import cross_val_score , train_test_split

import matplotlib.pyplot as plt


data = pd.read_csv('housing.csv')

data['total_bedrooms'] = data['total_bedrooms'].fillna(np.mean(data['total_bedrooms']));

data.drop('ocean_proximity' , axis=1 , inplace=True)

X = data.iloc[: , data.columns != 'median_house_value']
Y = data['median_house_value']

X_train  , X_test  , y_train , y_test = train_test_split(X  , Y  , test_size=0.3 , random_state=0)

train_errors , test_errors , cv_errors =  [] ,[] ,[];
degrees = [1,2,3,4,5]


X_train  , X_test  , y_train , y_test = train_test_split(X  , Y  , test_size=0.3 , random_state=0)

train_errors , test_errors , cv_errors =  [] ,[] ,[];
degrees = [1,2,3,4,5]

from sklearn.pipeline import make_pipeline
for d in degrees:

    model = make_pipeline(PolynomialFeatures(degree=d), LinearRegression())


    cv_score = cross_val_score(model, X_train, y_train, cv=5, scoring='neg_mean_squared_error')


    cv_errors.append(-cv_score.mean())


    model.fit(X_train, y_train)


    y_train_pred = model.predict(X_train)
    y_test_pred = model.predict(X_test)

    train_errors.append(mean_squared_error(y_train, y_train_pred))
    test_errors.append(mean_squared_error(y_test, y_test_pred))


plt.figure(figsize=(10, 6))
plt.plot(degrees, train_errors, label='Training Error', marker='o')
plt.plot(degrees, test_errors, label='Test Error', marker='o')
plt.plot(degrees, cv_errors, label='Cross-Validation Error', marker='o', linestyle='--')
plt.xlabel('Degree of Polynomial')
plt.ylabel('Mean Squared Error')
plt.title('Error vs Polynomial Degree')
plt.legend()
plt.grid(True)
plt.show()

