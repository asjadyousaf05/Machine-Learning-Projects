# -*- coding: utf-8 -*-
"""day10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rBy5WGIAe75HN5mlJWkC1SKEimEFg44Y
"""

import pandas as pd
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from lightgbm import LGBMClassifier

df = pd.read_csv("data.csv")


df.drop(columns=["SessionID", "SessionDate"], inplace=True)

label_encoders = {}
for col in ["StudentLevel", "Discipline", "TaskType", "FinalOutcome"]:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le

df["UsedAgain"] = df["UsedAgain"].astype(int)


X = df.drop(columns=["FinalOutcome"])
y = df["FinalOutcome"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

param_grid = {
    'num_leaves': [31, 50],
    'max_depth': [-1, 10, 20],
    'learning_rate': [0.05, 0.1],
    'n_estimators': [100, 200]
}


lgb_model = LGBMClassifier(random_state=42)
grid_search = GridSearchCV(estimator=lgb_model, param_grid=param_grid, cv=5, n_jobs=-1, verbose=1)
grid_search.fit(X_train, y_train)

best_model = grid_search.best_estimator_
y_pred = best_model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred, target_names=label_encoders['FinalOutcome'].classes_)

print(" Best Hyperparameters:", grid_search.best_params_)
print("\n Accuracy:", accuracy)
print("\n Confusion Matrix:\n", conf_matrix)
print("\n Classification Report:\n", class_report)



